<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/mvc
           http://www.springframework.org/schema/mvc/spring-mvc.xsd 
           http://www.springframework.org/schema/context 
           http://www.springframework.org/schema/context/spring-context.xsd">

<!--对指定包及其子包进行扫瞄 ,并查找出能够自动注册为spring Bean的类 :
包括@Controller,@Service,@Component,@Repository注解标注的类-->
<context:component-scan base-package="controller,dao,service"/>
<!-- 拦截器注册 -->
<!-- <mvc:interceptors>
	直接在mvc:interceptors节点下定义拦截器bean，则该拦截器将拦截所有的URL请求
	<bean id="allInterceptor" class="controller.ContInterceptor"></bean>
	mvc:interceptor节点下定义的拦截器只拦截mapping指定的URL请求
	<mvc:interceptor>
		<mvc:mapping path="/test/*"/>
        <bean class="controller.ContInterceptor" />
	</mvc:interceptor>
</mvc:interceptors> -->
<!-- 启用spring mvc提供的注解驱动特性 ，处理请求分发、适配-->
<mvc:annotation-driven />
<!-- 视图处理器 -->
<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
	<property name="prefix" value="/WEB-INF/view/" />
	<property name="suffix" value=".jsp" />
</bean>
</beans>